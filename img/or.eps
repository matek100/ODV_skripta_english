%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 234 432 297 455 
%%LanguageLevel: 2
%%Creator: CorelDRAW X7
%%Title: gates-1.eps
%%CreationDate: Tue May 10 14:17:50 2016
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/DocPsLevel 2 def
%Build: CorelDRAW X7 Version 17.5.0.907
/EpsFile true def
%%BeginResource: procset wCorel17Dict 17.0 0
/wCorel17Dict 300 dict def wCorel17Dict begin
%----------------------------------------------------------------------------
% Core Corel PostScript prolog functions
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/rp{{pop}repeat}bd/dexec{
exch begin cvx exec end}bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np
/newpath ld/Tl/translate ld/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd
/spg/showpage ld/showpage{}bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf
xd/$sdf false def/$SDF false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0
eq{$dsf 3 1 roll 4 -1 roll pop}if exch $Scra add exch load SetScr}bd
/SeparationMode where{pop}{/SeparationMode/Composite def}ifelse
/SeparationPlateName where{pop}{/SeparationPlateName null def}ifelse
/SeparateInColor where{pop}{/SeparateInColor false def}ifelse/EpsFile where
{pop}{/EpsFile false def}ifelse/FillOverprint false def/$fil 0 def
/OutlineOverprint 0 def/$PF false def/$bkg false def/CurrentOverprint false def
matrix currentmatrix/$ctm xd/$ptm matrix def/$ttm matrix def/$stm matrix def
/$ffpnt true def/CorelDrawReencodeVect[16#0/grave 16#5/breve 16#6/dotaccent
16#8/ring 16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi
16#27/quotesingle 16#60/grave 16#7C/bar 16#80/Euro
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/get_ps_level/languagelevel where{pop systemdict/languagelevel get exec}{1}
ifelse def/Level2 get_ps_level 2 ge def/Level3 get_ps_level 3 ge def
/AdobeDistiller/product where{pop systemdict/setdistillerparams known product
(Adobe PostScript Parser)ne and}{false}ifelse def/InRipSeparation
AdobeDistiller{false}{Level2{currentpagedevice/Separations 2 copy known{get}{
pop pop false}ifelse}{false}ifelse}ifelse def/ColorSeparationLevel1 1 0 0 0
gsave setcmykcolor currentcmykcolor grestore add add add 0 ne 0 1 0 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 0 1 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 0 0 1 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne and and and not def
/ColorSeparation/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{
InRipSeparation{true}{ColorSeparationLevel1}ifelse}ifelse}ifelse def
/IsColorDevice/deviceinfo where{pop deviceinfo/Colors known{deviceinfo/Colors
get exec 1 gt}{false}ifelse}{/statusdict where{pop statusdict/processcolors
known{statusdict/processcolors get exec 1 gt}{false}ifelse}{false}ifelse}
ifelse def/get_simulate_devicen get_ps_level 2 eq{{SeparationMode/OnHost ne
InRipSeparation AdobeDistiller or and}bind}{false}ifelse def/DocGrayScaleSpace
[/DeviceGray]def/DocRgbSpace[/DeviceRGB]def/DocCmykSpace[/DeviceCMYK]def
/DocLabSpace[/CIEBasedABC <</BlackPoint[0 0 0]/WhitePoint[0.9637 1.0000 0.8241
]/RangeABC[0 100 -128 127 -128 127]/DecodeABC[{16 add 116 div}bind{500 div}
bind{200 div}bind]/MatrixABC[1 1 1 1 0 0 0 0 -1]/DecodeLMN[{dup 0.206897 ge{dup
dup mul mul}{0.137931 sub 0.128419 mul}ifelse 0.9637 mul}bind{dup 0.206897
ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse 1.0000 mul}bind{dup
0.206897 ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse 0.8241 mul}bind]
>>]def/validate_cie_colorspace_whitepoint{load dup aload pop/WhitePoint get 1
1.0 put pop}bd/set_cie_colorspaces{/DocGrayScaleSpaceCIE where{pop
/DocGrayScaleSpaceCIE validate_cie_colorspace_whitepoint/DocGrayScaleSpace xd
DocGrayScaleSpace aload pop begin pop/DecodeA where{pop DecodeA type/arraytype
eq{DecodeA aload pop/DecodeA exch def}if}if end}if/DocRgbSpaceCIE where{pop
/DocRgbSpaceCIE validate_cie_colorspace_whitepoint/DocRgbSpace xd}if
/DocCmykSpaceCIE where{pop/DocCmykSpaceCIE validate_cie_colorspace_whitepoint
/DocCmykSpace xd}if}bd/set_rendering_intent{Level3{findcolorrendering{
/ColorRendering findresource setcolorrendering}{dup/DefaultColorRendering eq{
pop}{/ColorRendering findresource setcolorrendering}}ifelse}{pop}ifelse}bd
/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5 array astore}def}ifelse
/setcustomcolor where SeparationMode/OnHost ne and{pop}{/tint_cmyk_color{5 -1
roll dup 1 ge{pop}{4{dup 6 -1 roll mul exch}repeat pop}ifelse}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{SepsColor not{4 1 roll pop pop pop
1 exch sub SetGry}{SetCmyk_5}ifelse}ifelse}bd/setcustomcolor{exch aload pop
SepMode_5 0 eq{pop tint_cmyk_color setprocesscolor_5}{CurrentInkName_5 eq{4
index}{0}ifelse 6 1 roll 5 rp 1 sub neg SetGry}ifelse}bd}ifelse
/convert_rgb_to_cmyk{dup type/dicttype eq{}{3{1 exch sub 3 1 roll}repeat 3 copy
min min 3{dup 5 -1 roll sub neg exch}repeat}ifelse}bd/safe_setcolorspace{dup
currentcolorspace eq{pop}{setcolorspace}ifelse}bd/safe_setoverprint{dup type
/booleantype eq{dup currentoverprint ne{setoverprint}{pop}ifelse}{1 eq
setoverprint}ifelse}bd/is_cmyk_channel_name{/channel_name xd channel_name/Cyan
eq channel_name/Magenta eq or channel_name/Yellow eq or channel_name/Black eq
or{true}{false}ifelse}bd/is_rgb_channel_name{/channel_name xd channel_name/Red
eq channel_name/Green eq or channel_name/Blue eq or{true}{false}ifelse}bd
/is_spot_channel_name{/channel_name xd channel_name is_cmyk_channel_name
channel_name is_rgb_channel_name or channel_name/Gray eq or{false}{true}ifelse
}bd/spot_tint_transform_proc{/alternativeSpace xd/alternativeColors xd/tint xd
alternativeSpace DocLabSpace eq{/mixMethod/Additive def/altSpaceNumChannels 3
def}{alternativeSpace DocCmykSpace eq{/mixMethod/Subtractive def
/altSpaceNumChannels 4 def}{alternativeSpace DocRgbSpace eq{/mixMethod
/Additive def/altSpaceNumChannels 3 def}{alternativeSpace DocGrayScaleSpace eq
{/mixMethod/Additive def/altSpaceNumChannels 1 def}if}ifelse}ifelse}ifelse
alternativeSpace DocLabSpace eq{alternativeColors aload pop tint mul 3 1 roll
tint mul 3 1 roll dup 100 exch sub 1 tint sub mul add 3 1 roll}{/tintedColor
altSpaceNumChannels{0.0}repeat altSpaceNumChannels array astore def 0 1
altSpaceNumChannels 1 sub{/altChannelIndex exch def alternativeColors
altChannelIndex get mixMethod/Additive eq{1.0 exch sub tint mul 1.0 exch sub}{
tint mul}ifelse tintedColor altChannelIndex 3 2 roll put}for tintedColor aload
pop}ifelse}bd/devicen_colorant_mixer_proc{/numChannels xd/alternativeSpace xd
/channelNames xd/alternativeColors xd numColorants array astore/colorants xd
/is_spot_channel_name_loc{is_spot_channel_name}bind def alternativeSpace
DocCmykSpace eq{/mixMethod/Subtractive def/altSpaceNumChannels 4 def
/is_spot_channel_name_loc{is_cmyk_channel_name not}bind def}{alternativeSpace
DocRgbSpace eq{/mixMethod/Additive def/altSpaceNumChannels 3 def
/is_spot_channel_name_loc{is_rgb_channel_name not}bind def}{alternativeSpace
DocGrayScaleSpace eq{/mixMethod/Additive def/altSpaceNumChannels 1 def
/is_spot_channel_name_loc{/Gray ne}bind def}if}ifelse}ifelse mixMethod
/Additive eq{/mixedColor altSpaceNumChannels{0.0}repeat altSpaceNumChannels
array astore def/bProcessPlateTinted false def 0 1 numChannels 1 sub{
/channelIndex exch def channelNames channelIndex get is_spot_channel_name_loc
/bSpotChannel xd/sourceChannel colorants channelIndex get def/bWhiteBackground
0 mixedColor{add}forall altSpaceNumChannels div 0.999 gt bProcessPlateTinted
and def bSpotChannel bProcessPlateTinted not and{/bSpotChannel false def}if 0 1
altSpaceNumChannels 1 sub{/altChannelIndex exch def/mixedChannel mixedColor
altChannelIndex get def sourceChannel alternativeColors channelIndex get
altChannelIndex get 1.0 exch sub mul 1.0 exch sub dup 1.0 gt{pop 1.0}if dup 0.0
lt{pop 0.0}if bSpotChannel{sourceChannel 0.0 gt{mixedChannel mul}{pop
mixedChannel}ifelse}{/bProcessPlateTinted true def globaldict begin
/bSkipDeviceNImage where{pop false}{true}ifelse end DevicenImage and{pop
sourceChannel alternativeColors channelIndex get altChannelIndex get mul
mixedChannel add}{mixedChannel add}ifelse}ifelse dup 1.0 gt{pop 1.0}if dup 0.0
lt{pop 0.0}if mixedColor altChannelIndex 3 2 roll put}for}for}{/mixedColor
altSpaceNumChannels{1}repeat altSpaceNumChannels array astore def 0 1
altSpaceNumChannels 1 sub{/targetIndex exch def 0 1 numColorants 1 sub{
/sourceIndex exch def colorants sourceIndex get alternativeColors sourceIndex
get targetIndex get mul 1 exch sub mixedColor targetIndex get mul mixedColor
targetIndex 3 2 roll put}for mixedColor targetIndex 1 mixedColor targetIndex
get sub put}for}ifelse mixedColor aload pop}bd/ColorSpec 9 dict begin/color[]
def/names[]def/num 0 def/ColorModel null def/ColorSpace[]def/set_color{
ColorSeparationLevel1{convert_to_cmyk/color get aload pop setcmykcolor}{
ColorSpace safe_setcolorspace color aload pop setcolor}ifelse}bd
/separate_set_color{SeparationMode/OnHost eq{separate_color{/set_color dexec
true}{pop currentoverprint{false}{SeparateInColor{0 0 0 0 SetCmyk_5 true}{1
SetGry true}ifelse}ifelse}ifelse}{set_color true}ifelse}bd/separate_color{
currentdict false}bd/convert_to_cmyk{currentdict}bd currentdict end def
/GrayscaleColorSpec ColorSpec 9 dict copy begin/names{/Black}def/num 1 def
/ColorModel/Grayscale def/ColorSpace DocGrayScaleSpace def/separate_color{
currentdict false SeparationMode/OnHost eq{SeparationPlateName/Black eq{
SeparateInColor{pop convert_to_cmyk true}{pop true}ifelse}if}if}bd
/convert_to_cmyk{0 0 0 color aload pop 1 exch sub create_cmyk_color}bd
currentdict end def/create_grayscale_color{GrayscaleColorSpec 9 dict copy begin
/color exch 1 array astore def/ColorSpace DocGrayScaleSpace def currentdict end
}bd/RgbColorSpec ColorSpec 9 dict copy begin/names{/Red/Green/Blue}def/num 3
def/ColorModel/Rgb def/ColorSpace DocRgbSpace def/separate_color{
convert_to_cmyk/separate_color dexec}bd/convert_to_cmyk{color aload pop
convert_rgb_to_cmyk create_cmyk_color}bd currentdict end def/create_rgb_color{
RgbColorSpec 9 dict copy begin 3 array astore/color exch def/ColorSpace
DocRgbSpace def currentdict end}bd/HsbColorSpec ColorSpec 9 dict copy begin
/names{/Hue/Saturation/Brightness}def/num 3 def/ColorModel/Hsb def/ColorSpace
DocRgbSpace def/separate_color{convert_to_cmyk/separate_color dexec}bd
/convert_to_cmyk{color aload pop hsb2rgb convert_rgb_to_cmyk create_cmyk_color
}bd/convert_to_rgb{color aload pop hsb2rgb create_rgb_color}bd currentdict end
def/create_hsb_color{HsbColorSpec 9 dict copy begin 3 array astore/color exch
def/ColorSpace DocRgbSpace def currentdict end}bd/CmykColorSpec ColorSpec 9
dict copy begin/names{/Cyan/Magenta/Yellow/Black}def/num 4 def/ColorModel/Cmyk
def/ColorSpace DocCmykSpace def/separate_color{currentdict false
SeparationPlateIndex 0 ge SeparationPlateIndex 3 le and{color
SeparationPlateIndex get dup 0 gt{3 1 roll pop pop SeparateInColor{0 0 0 4
SeparationPlateIndex roll create_cmyk_color true}{1 exch sub
create_grayscale_color true}ifelse}{pop}ifelse}if}bd/convert_to_cmyk{
currentdict}bd currentdict end def/create_cmyk_color{CmykColorSpec 9 dict copy
begin 4 array astore/color exch def/ColorSpace DocCmykSpace def currentdict end
}bd/SpotColorSpec ColorSpec 9 dict copy begin/num 1 def/ColorModel/Spot def
/set_color{ColorSeparationLevel1{color aload pop get_cmyk_alternative_color
/color get aload pop names aload pop findcmykcustomcolor exch setcustomcolor}{
ColorSpace safe_setcolorspace color aload pop setcolor}ifelse}bd
/separate_color{currentdict false SeparationPlateIndex 4 eq{names aload pop
SeparationPlateName eq{color aload pop dup 0 gt{3 1 roll pop pop
SeparateInColor{pop convert_to_cmyk true}{1 exch sub create_grayscale_color
true}ifelse}{pop}ifelse}if}if}bd/convert_to_cmyk{/alternativeSpace ColorSpace 2
get def/tintTransformProc ColorSpace 3 get def alternativeSpace DocCmykSpace eq
{color aload pop tintTransformProc create_cmyk_color}{alternativeSpace
DocRgbSpace eq{color aload pop tintTransformProc create_rgb_color
/convert_to_cmyk dexec}{alternativeSpace DocGrayScaleSpace eq{0 0 0 color aload
pop 1 sub create_cmyk_color}{0 0 0 1 create_cmyk_color}ifelse}ifelse}ifelse}bd
/get_cmyk_alternative_color{/alternativeSpace ColorSpace 2 get def
alternativeSpace DocCmykSpace eq{alternativeColor aload pop create_cmyk_color}
{alternativeSpace DocRgbSpace eq{alternativeColor aload pop create_rgb_color
/convert_to_cmyk dexec}{alternativeSpace DocGrayScaleSpace eq{alternativeColor
aload pop create_grayscale_color/convert_to_cmyk dexec}{0 0 0 1
create_cmyk_color}ifelse}ifelse}ifelse}bd currentdict end def
/create_spot_colorspace{load/alternativeSpace xd/alternativeColor xd/name xd[
/Separation name alternativeSpace[alternativeColor alternativeSpace
/spot_tint_transform_proc cvx]cvx]}bd/create_spot_color{SpotColorSpec 9 dict
copy begin dup type/arraytype ne{create_spot_colorspace}if/ColorSpace xd/color
exch 1 array astore def ColorSpace 1 get 1 array astore/names xd currentdict
end}bd/DevicenColorSpec SpotColorSpec 9 dict copy begin/ColorModel/DeviceN def
/set_color{Level3{ColorSpace safe_setcolorspace color aload pop setcolor}{
ColorSpace 2 get setcolorspace color aload pop ColorSpace 3 get exec setcolor}
ifelse}bd/separate_color{currentdict false/PlateIndex -1 def 0 1 num 1 sub{dup
names exch get SeparationPlateName eq{/PlateIndex xd exit}if pop}for PlateIndex
0 ge{color PlateIndex get dup 0 gt{SeparateInColor{num 1 sub{0}repeat num
PlateIndex roll ColorSpace create_devicen_color/convert_to_cmyk dexec true}{1
exch sub create_grayscale_color true}ifelse 4 2 roll pop pop}{pop}ifelse}if}bd
/get_ink_as_spot{dup/indexInk xd dup color exch get exch names exch get[1.0 num
1 sub{0}repeat num indexInk roll ColorSpace 3 get exec]ColorSpace 2 get
create_spot_color}bd currentdict end def/create_devicen_colorspace{
/numColorants xd load/alternativeSpace xd bind/tintTransform exch def/names xd
[/DeviceN names alternativeSpace/tintTransform load]}bd/create_devicen_color{
DevicenColorSpec 9 dict copy begin dup type/arraytype ne{
create_devicen_colorspace}if/ColorSpace xd/num ColorSpace 1 get length def
/names ColorSpace 1 get def num array astore/color xd currentdict end}bd
/RegistrationColorSpec ColorSpec 9 dict copy begin/num 1 def/ColorModel
/Registration def/ColorSpace{[/Separation/All DocCmykSpace{dup dup dup}]}def
/names[/All]def/set_color{ColorSeparationLevel1{DocGrayScaleSpace
safe_setcolorspace color aload pop 1 exch sub setcolor}{ColorSpace
safe_setcolorspace color aload pop setcolor}ifelse}bd/separate_color{
SeparateInColor{convert_to_cmyk true}{color aload pop 1 exch sub
create_grayscale_color true}ifelse}bd/convert_to_cmyk{color aload pop dup dup
dup create_cmyk_color}bd currentdict end def/create_registration_color{
RegistrationColorSpec 9 dict copy begin 1 array astore/color xd currentdict end
}bd/LabColorSpec ColorSpec 9 dict copy begin/names{/L/a/b}def/num 3 def
/ColorModel/Lab def/ColorSpace DocLabSpace def/separate_color{convert_to_cmyk
/separate_color dexec}bd/convert_to_cmyk{0 0 0 0 create_cmyk_color}bd
currentdict end def/create_lab_color{LabColorSpec 9 dict copy begin 3 array
astore/color exch def/ColorSpace DocLabSpace def currentdict end}bd
/set_solid_fill{/FillColor xd/$fil 0 def}bd/set_outline{/OutlineColor xd}bd
/CheckLevelCompatibility{/DocPsLevel where{pop DocPsLevel get_ps_level gt{@np
/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level of Corel document is higher than the PostScript)show 72
132 m(level of this device. Change the PS Level in the Corel application)show
72 120 m(by selecting the PostScript tab in the print dialog, and selecting)
show 72 108 m(document level from the Compatibility drop down list.)show flush
spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known{systemdict
/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd/AutoFlatness where{pop
AutoFlatness{/@ifl{dup currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if}if/@ssa Level2{{true
setstrokeadjust}}{{}}ifelse bd/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M
/setmiterlimit ld/w/setlinewidth ld/O{/FillOverprint xd}bd/R{/OutlineOverprint
xd}bd/W/eoclip ld/c/curveto ld/C/c ld/l/lineto ld/L/l ld/rl/rlineto ld/m
/moveto ld/n/newpath ld/N/newpath ld/P{11 rp}bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld
/Q/@gr ld/&{}bd/@j{@sv @np}bd/@J{@rs}bd/g{1 exch sub 0 0 0 4 roll 3
create_cmyk_color set_solid_fill/$fil 0 def}bd/G{1 sub neg 0 0 0 4 -1 roll
create_cmyk_color set_outline}bd/i{dup 0 ne{setflat}{pop}ifelse}bd/v{4 -2 roll
2 copy 6 -2 roll c}bd/V/v ld/y{2 copy c}bd/Y/y ld/@w{matrix rotate/$ptm xd
matrix scale $ptm dup concatmatrix/$ptm xd 1 eq{$ptm exch dup concatmatrix
/$ptm xd}if/patternScallingMatrix where{pop patternScallingMatrix $ptm matrix
concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd{/$scp xd/$sca xd/$scf xd}if
}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}if}bd/@D{2 index 0 eq{$dsf 3 1
roll 4 -1 roll pop}if 3 copy exch $Scra add exch load SetScr/$dsp xd/$dsa xd
/$dsf xd}bd/$ngx{$SDF{$SCF SeparationMode/Composite eq{$SCA}{$dsa}ifelse $SCP
@ss}if}bd/min{2 copy le{pop}{exch pop}ifelse}bd/max{2 copy ge{pop}{exch pop}
ifelse}bd/in_range{3 -1 roll min max}bd/InRange/in_range load bd/@sqr{dup 0 rl
dup 0 exch rl neg 0 rl @cp}bd/currentscale{1 0 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt 0 1 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup
3 -1 roll eq{1 add}if}bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch
pop abs 1 exch sub}bd/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}
if exch}repeat pop}bd/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy min min 3{
dup 5 -1 roll sub neg exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul
add 1 index .114 mul add 4 1 roll pop pop pop}bd/WaldoColor_5 where{pop}{
/CorelImage systemdict/image get def/CorelSetGray systemdict/setgray get def
/CorelGetGray systemdict/currentgray get def/CorelSetTransfer systemdict
/settransfer get def/CorelGetTransfer systemdict/currenttransfer get def
/SetRgb/setrgbcolor ld/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry
/currentgray ld/SetRgb2 systemdict/setrgbcolor get def/GetRgb2 systemdict
/currentrgbcolor get def/SetHsb systemdict/sethsbcolor get def/GetHsb
systemdict/currenthsbcolor get def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll
dup floor sub 3 1 roll SetHsb GetRgb2}bd/setcmykcolor where{pop/LumSepsDict
where{pop/SetCmyk_5{LumSepsDict/setcmykcolor get exec}def}{/AldusSepsDict where
{pop/SetCmyk_5{AldusSepsDict/setcmykcolor get exec}def}{/SetCmyk_5
/setcmykcolor ld}ifelse}ifelse}{/setcmykcolor{create_cmyk_color
/separate_set_color dexec/$ffpnt xd}bd/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse
/currentcmykcolor where{pop/GetCmyk/currentcmykcolor ld}{/GetCmyk{GetRgb
rgb2cmyk}bd}ifelse/setoverprint where{pop}{/setoverprint{/CurrentOverprint xd}
bd}ifelse/currentoverprint where{pop}{/currentoverprint{CurrentOverprint}bd}
ifelse/colorimage where{pop/ColorImage{colorimage}def}{/ColorImage{/ncolors xd
/$multi xd $multi true eq{ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop pop exch
pop abs{daqR pop daqG pop daqB pop}repeat}{/daqK xd/daqY xd/daqM xd/daqC xd pop
pop exch pop abs{daqC pop daqM pop daqY pop daqK pop}repeat}ifelse}{/dataaq xd
{dataaq ncolors dup 3 eq{/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv
getinterval pop}{4 eq{/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
$dat 4 index 3 add get 255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1
roll put}for $dat 0 $dat length ncolors idiv getinterval}if}ifelse}image}
ifelse}bd}ifelse/currentcmykcolor{GetCmyk}bd/sethsbcolor{hsb2rgb setrgbcolor}
bd/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SeparationMode/Composite eq{IMAGE}{dup
type/dicttype eq{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8
eq exch/BitsPerComponent get 1 eq or currentcolorspace 0 get DocGrayScaleSpace
eq and{SeparationPlateName(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get
abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{
SeparationPlateName(Black)eq{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}
repeat}ifelse}{IMAGE}ifelse}ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/$fm 0
def/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SeparationMode/Composite eq{
true}{$Psc 0 ne or $ink_5 3 eq or}ifelse{0 J 0 j[]0 d FillOverprint
safe_setoverprint FillColor/separate_set_color dexec pop $ctm setmatrix 72 1000
div dup matrix scale dup concat dup Bburx exch Bbury exch itransform ceiling
cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform floor cvi
/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry wfill}
ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if
FillOverprint safe_setoverprint $fil 1 eq{CorelPtrnDoFill}{$fil 2 eq
{gradient_fill}{$fil 3 eq{@Pf}{get_simulate_devicen FillColor/ColorModel get
/DeviceN eq and{0 1 FillColor/num get 1 sub{dup 0 gt{true safe_setoverprint}if
FillColor/get_ink_as_spot dexec/set_color dexec @gs wfill @gr}for}{FillColor
/separate_set_color dexec{wfill}{@np}ifelse}ifelse}ifelse}ifelse}ifelse $sdf{
$dsf $dsa $dsp @ss}if setmatrix}bd/f{@cp F}bd/S{matrix currentmatrix $ctm
setmatrix $SDF{$SCF $SCA $SCP @ss}if OutlineOverprint safe_setoverprint
get_simulate_devicen OutlineColor/ColorModel get/DeviceN eq and{0 1
OutlineColor/num get 1 sub{dup 0 gt{true safe_setoverprint}if OutlineColor
/get_ink_as_spot dexec/set_color dexec matrix currentmatrix $ptm concat @gs
stroke @gr setmatrix}for}{OutlineColor/separate_set_color dexec{matrix
currentmatrix $ptm concat stroke setmatrix}{@np}ifelse}ifelse $SDF{$dsf $dsa
$dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}bd/b{@cp B}bd/_E{5 array
astore exch cvlit xd}bd/@cc{currentfile $dat readhexstring pop}bd/@sm{/$ctm
$ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd/Bblly xd/Bbllx xd}bd/@c{@cp}bd
/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd}bd/tcc{@cc}def/@B{@gs S
@gr F}bd/@b{@cp @B}bd/init_separation{/SeparationMode where{pop}{
/SeparationMode/Composite def}ifelse/SeparationPlateName where{pop}{
/SeparationPlateName null def}ifelse/SeparateInColor where{pop}{
/SeparateInColor false def}ifelse SeparationMode/Composite eq{
/SeparationPlateIndex -1 def}{/SeparationPlateIndex 4 def}ifelse/CmykPlates[
/Cyan/Magenta/Yellow/Black]def 0 1 3{dup CmykPlates exch get
SeparationPlateName eq{/SeparationPlateIndex xd exit}if pop}for
/CurrentInkName_5 SeparationPlateName def/$ink_5 SeparationPlateIndex def
SeparationMode/OnHost eq{/SepMode_5 2 def}{/SepMode_5 0 def}ifelse/SepsColor
SeparateInColor def}bd/init_separation_from_legacy{EpsFile{/SepMode_5 where{
pop SepMode_5 2 eq{/SeparationMode/OnHost def}{/SeparationMode/Composite def}
ifelse}if/CurrentInkName_5 where{pop/SeparationPlateName CurrentInkName_5 def}
if/$ink_5 where{pop/SeparationPlateIndex $ink_5 def}if/SepsColor where{pop
/SeparateInColor SepsColor def}if}if}bd init_separation_from_legacy/@whi{@gs
-72000 dup m -72000 72000 l 72000 dup l 72000 -72000 l @cp 1 SetGry fill @gr}
bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec cvx]cvx settransfer @whi}
bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}bd/@eax{/deflevel deflevel
dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}ifelse}bd/eax{{exec}forall}
bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict/pdfmark known not{/pdfmark
/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}ifelse}bd
%----------------------------------------------------------------------------
% Text support
/z{exch findfont exch scalefont setfont}bd/ZB{9 dict dup begin 4 1 roll
/FontType 3 def/FontMatrix xd/FontBBox xd/Encoding 256 array def 0 1 255{
Encoding exch/.notdef put}for/CharStrings 256 dict def CharStrings/.notdef{}
put/Metrics 256 dict def Metrics/.notdef 3 -1 roll put/BuildChar{exch dup
/$char exch/Encoding get 3 index get def dup/Metrics get $char get aload pop
setcachedevice begin Encoding exch get CharStrings exch get end exec}def end
definefont pop}bd/ZBAddChar{findfont begin dup 4 1 roll dup 6 1 roll Encoding 3
1 roll put CharStrings 3 1 roll put Metrics 3 1 roll put end}bd/Z{findfont dup
maxlength 2 add dict exch dup{1 index/FID ne{3 index 3 1 roll put}{pop pop}
ifelse}forall pop dup dup/Encoding get 256 array copy dup/$fe xd/Encoding exch
put dup/Fontname 3 index put 3 -1 roll dup length 0 ne{0 exch{dup type 0 type
eq{exch pop}{$fe exch 2 index exch 0 1 $fe length 1 sub{/encodingIndex xd dup
$fe encodingIndex get eq{$fe encodingIndex/.notdef put}if}for put 1 add}ifelse
}forall pop}if dup 256 dict dup/$met xd/Metrics exch put dup/FontMatrix get 0
get 1000 mul 1 exch div 3 index length 256 eq{0 1 255{dup $fe exch get dup
/.notdef eq{pop pop}{5 index 3 -1 roll get 2 index mul $met 3 1 roll put}
ifelse}for}if pop definefont pop pop}bd/CorelIsValidCharpath{pathbbox 3 -1 roll
sub abs 0.5 ge 3 1 roll sub abs 0.5 ge and}bd/@ftx{{currentpoint 3 -1 roll(0)
dup 3 -1 roll 0 exch put dup @gs true charpath $ctm setmatrix
CorelIsValidCharpath{@@txt}if @gr @np stringwidth pop 3 -1 roll add exch m}
forall}bd/@ft{matrix currentmatrix exch $sdf{$scf $sca $scp @ss}if $fil 1 eq
{/@@txt/@pf ld @ftx}{$fil 2 eq{/@@txt/gradient_fill ld @ftx}{$fil 3 eq{/@@txt
/@Pf ld @ftx}{$fil 4 eq{/@@txt/output_shading_gradient ld @ftx}{FillOverprint
safe_setoverprint FillColor/separate_set_color dexec{show}{pop}ifelse}ifelse}
ifelse}ifelse}ifelse $sdf{$dsf $dsa $dsp @ss}if setmatrix}bd/@st{matrix
currentmatrix exch $SDF{$SCF $SCA $SCP @ss}if OutlineOverprint
safe_setoverprint OutlineColor/separate_set_color dexec{{currentpoint 3 -1 roll
(0)dup 3 -1 roll 0 exch put dup @gs true charpath $ctm setmatrix $ptm concat
stroke @gr @np stringwidth pop 3 -1 roll add exch m}forall}{pop}ifelse $SDF
{$dsf $dsa $dsp @ss}if setmatrix}bd/@te{@ft}bd/@tr{@st}bd/@ta{dup @gs @ft @gr
@st}bd/@t@a{dup @gs @st @gr @ft}bd/@tm{@sm concat}bd/e{/t{@te}def}bd/r{/t{@tr}
def}bd/o{/t{pop}def}bd/a{/t{@ta}def}bd/@a{/t{@t@a}def}bd/t{@te}def/T{@np $ctm
setmatrix/$ttm matrix def}bd/ddt{t}def/@t{/$stm $stm currentmatrix def 3 1 roll
m $ttm concat ddt $stm setmatrix}bd/@n{/$ttm exch matrix rotate def}bd/@s{}bd
/@l{}bd/_lineorientation 0 def/_bitfont null def/_bitlobyte 0 def/_bitkey null
def/_bithibyte 0 def
%----------------------------------------------------------------------------
% Raster images support
/set_image_clipping{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index
3 index l 3 index 3 index l clip pop pop pop pop}bd/set_image_parameters{/$frg
xd/$bkg xd/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd}bd
/output_image{/@cc xd @sm @gs set_image_clipping set_image_parameters
SeparationMode/OnHost eq EpsFile and{separate_output_image}{
output_composite_image}ifelse @gr $ctm setmatrix}bd/output_composite_image{
DocPsLevel 3 eq MaskedImage true eq and{output_masked_image}{$bts 1 gt
DocPsLevel 2 eq DocPsLevel 3 eq or and{DevicenImage{output_devicen_image}{
output_color_image}ifelse}{$bts 1 eq{output_monochrome_image}{
output_color_image_level1}ifelse}ifelse}ifelse}bd/separate_output_image{@gs
$bts 1 gt{separate_output_color_image}{separate_output_monochrome_image}ifelse
@gr not{currentoverprint not{1.0 SetGry wfill}if}if @np}bd/set_decode_filter{
ImageCompression/JPEG eq{/DCTDecode filter}{ImageCompression/RLE eq{
/RunLengthDecode filter}{ImageCompression/LZW eq{/LZWDecode filter}if}ifelse}
ifelse}bd/create_datasource{currentfile DevicenImage not get_ps_level 2 gt or{
/ASCII85Decode filter}if set_decode_filter}bd/set_image_strip_parameters{
/stripRows xd/numPlanes xd/stripBuffer $wid $bts mul $ncl mul stripRows mul 8
div ceiling cvi dup 65535 gt{pop $ncl $bts mul}if string def DevicenImage{
/readstrip{DataSource stripBuffer readhexstring pop}bd}{/readstrip{DataSource
stripBuffer readstring pop}bd}ifelse/stripHeight $lly $ury sub stripRows mul
$hei div def/stripOutBuffer $wid stripRows mul numPlanes mul 65535 min string
def/strip_img_dict 8 dict def strip_img_dict begin/ImageType 1 def/Width $wid
def/Height stripRows def/BitsPerComponent $bts def/Decode[numPlanes{0 1}
repeat]def/ImageMatrix[$wid 0 0 stripRows neg 0 $hei 0 gt{stripRows}{0}ifelse]
def/DataSource stripOutBuffer def end}bd/separate_output_color_image{
/plateContent false def $ncl 1 eq{SeparationPlateName/Black eq{
output_color_image/plateContent true def}if}{@np/DataSource create_datasource
def SeparateInColor{DocCmykSpace setcolorspace/numPlanes 4 def}{
DocGrayScaleSpace setcolorspace/numPlanes 1 def}ifelse/stripRows 65535 $wid
$bts mul $ncl numPlanes max mul 8 div div floor cvi 1 max def numPlanes
stripRows set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling
cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight
stripIndex mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi
def stripIndex maxStripIndex eq{numPlanes $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs 0 1 $wid stripRows mul 1 sub{/pixelIndex xd stripBuffer
pixelIndex $ncl mul $ncl getinterval{255 div}forall DevicenImage{
ImageDevicenSpace create_devicen_color}{$ncl 3 eq{create_rgb_color}{
create_cmyk_color}ifelse}ifelse/separate_color dexec{/plateContent true def
begin color aload pop end}{pop numPlanes[numPlanes 1 eq{1}{0}ifelse]cvx repeat
}ifelse numPlanes array astore/pixelSepIndex pixelIndex numPlanes mul def
/posColorant 0 def{stripOutBuffer pixelSepIndex posColorant add 3 -1 roll 255
mul cvi put/posColorant posColorant 1 add def}forall}for $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale strip_img_dict image @gr}for $SDF{$dsf $dsa
$dsp @ss}if}ifelse plateContent}bd/separate_output_monochrome_image{
SeparationPlateName/Black eq{output_monochrome_image true}{false}ifelse}bd
/output_monochrome_image{$frg 1 eq{OutlineOverprint safe_setoverprint
ImageForegroundColor/separate_set_color dexec{1}{0}ifelse/$frg xd}{/$frg false
def}ifelse $bkg 1 eq{@gs $ctm setmatrix F @gr}if @np/$dat $wid $bts mul 8 div
ceiling cvi 65535 min string def $bkg $frg add 1 ge{$SDF{$SCF $SCA $SCP @ss}if
$llx $lly Tl $urx $llx sub $ury $lly sub scale $bkg 1 eq{FillColor
/separate_set_color dexec pop}if $wid $hei abs $bts 1 eq{$bkg 1 ge}{$bts 1 ge}
ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts 1 eq
{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}repeat}
ifelse}bd/output_color_image_level1{@np $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]/$dat $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min string def $msimage
false eq $ncl 1 eq or{/@cc load false $ncl ColorImage}{$wid $bts mul 8 div
ceiling cvi $ncl 3 eq{dup dup/$dat1 exch string def/$dat2 exch string def
/$dat3 exch string def/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch
string def/$dat2 exch string def/$dat3 exch string def/$dat4 exch string def
/@cc1 load/@cc2 load/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse
$SDF{$dsf $dsa $dsp @ss}if}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2
{currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring
pop}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def
/ImageCompression/None def/MaskedImage false def/DevicenImage false def
/output_color_image{@np $ncl 1 eq{DocGrayScaleSpace}{$ncl 3 eq{DocRgbSpace}
{DocCmykSpace}ifelse}ifelse setcolorspace/$dat $wid $bts mul $ncl mul 8 div
ceiling cvi 65535 min string def $ngx $llx $lly Tl $urx $llx sub $ury $lly sub
scale 8 dict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei
neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource create_datasource def currentdict
end image $SDF{$dsf $dsa $dsp @ss}if}bd/simulate_devicen_image{@np $ngx
/colorantNames ImageDevicenSpace 1 get def/altColorSpace ImageDevicenSpace 2
get def/tintProc ImageDevicenSpace 3 get def/DataSource create_datasource def
/stripRows 65535 $wid $bts mul $ncl mul 8 div div floor cvi 1 max def 1
stripRows set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling
cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight
stripIndex mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi
def stripIndex maxStripIndex eq{1 $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs $llx $t_lly Tl $urx $llx sub $t_ury $t_lly sub scale 0 1 $ncl
1 sub{@gs/inkIndex exch def 0 1 stripOutBuffer length 1 sub{dup $ncl mul
inkIndex add stripBuffer exch get stripOutBuffer 3 1 roll put}for[/Separation
colorantNames inkIndex get altColorSpace{$ncl 1 sub{0}repeat $ncl inkIndex roll
tintProc}]setcolorspace inkIndex 0 gt{true setoverprint}if strip_img_dict image
@gr}for @gr}for $SDF{$dsf $dsa $dsp @ss}if}bd/output_devicen_image_alt{@np $ngx
/colorantNames ImageDevicenSpace 1 get def/altColorSpace ImageDevicenSpace 2
get def/tintProc ImageDevicenSpace 3 get def altColorSpace DocCmykSpace eq{
/numAltChannels 4 def}{altColorSpace DocRgbSpace eq{/numAltChannels 3 def}{
/numAltChannels 1 def}ifelse}ifelse/DataSource create_datasource def
altColorSpace setcolorspace/stripRows 65535 $wid $bts mul $ncl numAltChannels
max mul 8 div div floor cvi 1 max def numAltChannels stripRows
set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling cvi 1 sub
def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight stripIndex
mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi def
stripIndex maxStripIndex eq{numAltChannels $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs 0 1 stripBuffer length $ncl div cvi 1 sub{/pixelIndex xd
stripBuffer pixelIndex $ncl mul $ncl getinterval{255 div}forall tintProc exec
numAltChannels array astore/pixelAltIndex pixelIndex numAltChannels mul def
/posColorant 0 def{stripOutBuffer pixelAltIndex posColorant add 3 -1 roll 255
mul cvi put/posColorant posColorant 1 add def}forall}for $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale strip_img_dict image @gr}for $SDF{$dsf $dsa
$dsp @ss}if}bd/output_devicen_image_native{@np $ngx ImageDevicenSpace
setcolorspace/scanline $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min
string def/readscanline{currentfile scanline readhexstring pop}bind def $llx
$lly Tl $urx $llx sub $ury $lly sub scale 8 dict begin/ImageType 1 def/Width
$wid def/Height $hei abs def/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]
def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource{
readscanline}def currentdict end image $SDF{$dsf $dsa $dsp @ss}if}bd
/output_devicen_image{Level3{output_devicen_image_native}{get_simulate_devicen
{simulate_devicen_image}{output_devicen_image_alt}ifelse}ifelse}bd
/output_masked_image{/$dat $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min
string def $ngx DevicenImage{ImageDevicenSpace}{$ncl 1 eq{DocGrayScaleSpace}{
$ncl 3 eq{DocRgbSpace}{DocCmykSpace}ifelse}ifelse}ifelse setcolorspace $llx
$lly Tl $urx $llx sub $ury $lly sub scale/ImageDataDict 8 dict def
ImageDataDict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei
neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource create_datasource def end
/MaskedImageDict 7 dict def MaskedImageDict begin/ImageType 3 def
/InterleaveType 3 def/MaskDict ImageMaskDict def/DataDict ImageDataDict def end
MaskedImageDict image $SDF{$dsf $dsa $dsp @ss}if}bd/set_image_mask{/$mbts xd
/$mhei xd/$mwid xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def
/Width $mwid def/Height $mhei abs def/BitsPerComponent $mbts def/DataSource
maskstream def/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]
def/Decode[1 0]def end}bd/@daq{dup type/arraytype eq{aload pop}if}bd
/skip_image_body{8 rp/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd
/$wid xd DevicenImage not ImageCompression/JPEG eq or ImageCompression/RLE eq
or ImageCompression/LZW eq or{create_datasource flushfile}{/scanline $wid $bts
mul $ncl mul 8 div ceiling cvi dup 65535 gt{pop $bts $ncl mul}if string def
/upperBound $wid $hei mul $bts mul $ncl mul scanline length div cvi 1 sub def 0
1 upperBound{pop currentfile scanline readhexstring pop pop}for}ifelse}bd
/disable_raster_output{deflevel 0 eq{@rs}if/output_image load
/output_image_original exch def/output_image/skip_image_body load def
globaldict begin/bSkipDeviceNImage true def end deflevel 0 eq{@sv}if}def
/enable_raster_output{deflevel 0 eq{@rs}if/bSkipDeviceNImage where{
/bSkipDeviceNImage undef/output_image/output_image_original load def}if
deflevel 0 eq{@sv}if}def
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel17Dict begin
@BeginSysCorelDict
/$dcm matrix currentmatrix def
@ssa
1.00 setflat
/$fst 128 def
%%EndSetup

%%Page: 1 1
%%ViewingOrientation: 1 0 0 1
%%BoundingBox: 0 0 595 841
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
246.03591 433.64693 287.23975 454.44274 @E
/$fm 1 def
2 J 0 j 4.000000050272774 setmiterlimit
[] 0 d 0 R 0 @G
0.0000  create_grayscale_color set_outline
[1.00000000 0.00000000 0.00000000 1.00000000 0.00000000 0.00000000] 1 0.79994 0.79994 0.00000 @w
251.23975 454.44274 m
251.23975 454.39682 L
252.99666 451.34192 254.01288 447.81789 254.01288 444.04498 C
254.01288 440.27178 252.99666 436.74803 251.23975 433.69285 C
251.23975 433.64693 L
262.01282 433.64693 L
269.70066 433.64693 276.41083 437.83795 280.01282 444.04498 C
276.41083 450.25172 269.70066 454.44274 262.01282 454.44274 C
251.23975 454.44274 L
@c
280.03578 444.04498 m
287.23975 444.04498 L
246.03591 449.24372 m
253.23987 449.24372 L
246.03591 438.84595 m
253.23987 438.84595 L
S

@rax %Note: Object
235.09559 444.62580 243.79654 452.81565 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_solid_fill
235.10976 452.52170 m
235.10041 452.58463 235.09559 452.63622 235.09559 452.68044 c
235.09559 452.77370 L
235.16816 452.79241 235.24980 452.80176 235.33597 452.80176 c
235.58797 452.80176 l
235.98000 452.79241 236.22746 452.78787 236.32781 452.78787 c
236.64274 452.78787 236.96220 452.79014 237.28677 452.79723 c
237.48746 452.79950 237.61106 452.80176 237.65528 452.80176 c
237.81855 452.80176 L
237.85143 452.73175 237.86759 452.67817 237.86759 452.64302 c
237.86759 452.61751 237.85824 452.58236 237.83953 452.53587 C
237.73465 452.52170 l
237.39647 452.49137 237.18387 452.45169 237.09770 452.40265 c
237.06028 452.37940 237.04157 452.35134 237.04157 452.31647 c
237.04157 452.24419 237.09770 452.14157 237.20740 452.00381 c
237.73465 451.30620 238.09408 450.85805 238.28542 450.65735 C
238.72620 451.23619 238.99011 451.60724 239.07628 451.77279 c
239.16274 451.93833 239.20696 452.06674 239.20696 452.16000 c
239.20696 452.26743 239.16501 452.35616 239.08337 452.42844 c
239.00173 452.50072 238.80104 452.55912 238.48129 452.60589 C
238.44643 452.65946 238.42772 452.70624 238.42772 452.74110 C
238.44869 452.80885 L
238.62586 452.81565 l
238.67036 452.81565 238.75200 452.81339 238.86397 452.80885 c
239.05984 452.79468 239.25600 452.78787 239.45187 452.78787 c
239.55222 452.78787 239.72485 452.79014 239.97005 452.79723 c
240.21723 452.80403 240.40403 452.80885 240.52989 452.80885 c
240.84482 452.80885 L
240.90321 452.78079 240.93354 452.74337 240.93354 452.69688 c
240.93354 452.67335 240.92901 452.64302 240.91965 452.60589 C
240.84737 452.58718 240.75865 452.56847 240.65348 452.54976 c
240.40857 452.51235 240.16819 452.42135 239.93717 452.27906 c
239.76454 452.17191 239.59191 452.00381 239.42409 451.77052 c
238.44161 450.45439 L
239.43572 449.21792 l
239.89294 448.60422 240.17301 448.24479 240.27562 448.13509 c
240.37824 448.02539 240.49020 447.93694 240.60926 447.86920 c
240.72831 447.80145 240.90094 447.73625 241.12970 447.67786 C
241.13424 447.62173 241.13650 447.57298 241.13650 447.53074 c
241.13650 447.49814 241.12715 447.45392 241.10872 447.39780 C
241.02680 447.39780 240.61153 447.41650 239.86035 447.45392 c
239.81584 447.45392 239.59672 447.45165 239.20243 447.44683 c
239.07855 447.44230 238.95978 447.43975 238.84753 447.43975 c
238.74038 447.43975 238.61197 447.44457 238.45578 447.45392 C
238.47676 447.66397 L
238.54422 447.67786 238.62132 447.69175 238.70296 447.71046 c
238.93625 447.75241 239.10435 447.81080 239.20469 447.88564 c
239.26535 447.93213 239.29342 447.98343 239.29342 448.03956 c
239.29342 448.13509 238.98302 448.55745 238.35997 449.30636 c
237.96567 449.78003 L
237.77433 449.58869 237.56202 449.31572 237.32872 448.96337 c
237.19578 448.75814 237.08608 448.60422 237.00444 448.50387 c
236.85024 448.32898 236.77342 448.17959 236.77342 448.06280 c
236.77342 448.02312 236.79893 447.98117 236.85506 447.93921 c
236.90863 447.89726 237.06737 447.84822 237.33326 447.79209 c
237.51071 447.75723 237.63430 447.72690 237.70658 447.70592 C
237.72076 447.64299 237.72756 447.59622 237.72756 447.56362 c
237.72756 447.53329 237.72302 447.48879 237.71367 447.42586 C
237.36359 447.44457 237.02060 447.45392 236.68923 447.45392 c
236.26942 447.45392 235.96611 447.44910 235.77704 447.43975 c
235.58797 447.43039 235.47146 447.42586 235.42469 447.42586 c
235.37112 447.42586 235.28239 447.43039 235.16561 447.43975 C
235.14718 447.50523 235.13783 447.55427 235.13783 447.58687 c
235.15172 447.67786 L
235.21465 447.70819 235.29402 447.72917 235.38983 447.73625 c
235.69540 447.76658 235.96611 447.87628 236.20394 448.06507 c
236.43978 448.25187 236.96702 448.89817 237.78142 450.00425 C
236.85732 451.11487 L
235.90290 452.26290 l
235.87512 452.29068 235.84224 452.31647 235.80028 452.34454 c
235.72800 452.38649 235.62992 452.41682 235.50633 452.44006 c
235.31981 452.47748 235.18658 452.50299 235.10976 452.52170 C
@c
F

@rax %Note: Object
235.09559 444.62580 243.79654 452.81565 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_solid_fill
243.79285 444.62580 m
242.23890 444.62580 L
242.23663 444.64677 242.23550 444.66321 242.23550 444.67710 c
242.23550 444.71565 242.24372 444.74258 242.25874 444.75761 c
242.27518 444.77291 242.32535 444.78794 242.40926 444.80438 c
242.54107 444.83102 242.64850 444.86391 242.73014 444.90359 C
242.75225 444.95376 242.76387 445.00025 242.76387 445.04334 c
242.76387 445.25565 l
242.76387 445.28145 242.76756 445.39682 242.77436 445.60233 c
242.77691 445.67915 242.77918 446.01534 242.78145 446.60920 c
242.78854 447.41395 L
242.78145 447.88422 l
242.78145 447.95197 242.78372 448.16882 242.78854 448.53165 C
242.26809 448.16315 241.98350 447.97861 241.93332 447.97861 c
241.91461 447.97861 241.89477 447.98797 241.87380 448.00781 c
241.85395 448.02652 241.84346 448.04636 241.84346 448.06394 c
241.84346 448.08718 241.85169 448.10476 241.86671 448.11865 c
241.89959 448.14784 241.97528 448.19688 242.09546 448.26576 c
242.11417 448.27398 242.19241 448.33578 242.33102 448.45002 c
242.55269 448.63427 242.71370 448.77798 242.81660 448.88287 c
242.91808 448.98775 242.98101 449.04614 243.00425 449.06031 C
243.04876 449.06258 243.08249 449.06372 243.10687 449.06372 c
243.16413 449.06372 243.20041 449.05436 243.21430 449.03452 c
243.22932 449.01468 243.23641 448.94466 243.23641 448.82447 c
243.21203 445.77269 L
243.21203 445.47165 l
243.21203 445.39824 243.21203 445.32454 243.20948 445.24998 c
243.20721 445.17657 243.20608 445.12157 243.20608 445.08784 c
243.20608 445.00507 243.21543 444.95235 243.23641 444.92683 c
243.25058 444.91039 243.29254 444.89055 243.36369 444.86504 c
243.59698 444.81713 l
243.69846 444.79276 243.75317 444.77518 243.76252 444.76583 c
243.78491 444.74485 243.79654 444.71339 243.79654 444.67002 c
243.79285 444.62580 L
@c
F

@rax %Note: Object
234.79115 432.87024 244.10098 441.06009 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_solid_fill
234.80532 440.76614 m
234.79597 440.82907 234.79115 440.88066 234.79115 440.92488 c
234.79115 441.01814 L
234.86372 441.03685 234.94535 441.04620 235.03153 441.04620 c
235.28353 441.04620 l
235.67556 441.03685 235.92302 441.03231 236.02337 441.03231 c
236.33830 441.03231 236.65776 441.03458 236.98233 441.04167 c
237.18302 441.04394 237.30661 441.04620 237.35083 441.04620 c
237.51411 441.04620 L
237.54699 440.97619 237.56315 440.92261 237.56315 440.88746 c
237.56315 440.86195 237.55380 440.82680 237.53509 440.78031 C
237.43020 440.76614 l
237.09203 440.73581 236.87943 440.69613 236.79326 440.64709 c
236.75584 440.62384 236.73713 440.59578 236.73713 440.56091 c
236.73713 440.48863 236.79326 440.38602 236.90296 440.24825 c
237.43020 439.55065 237.78964 439.10249 237.98098 438.90180 C
238.42176 439.48063 238.68567 439.85169 238.77184 440.01723 c
238.85830 440.18277 238.90252 440.31118 238.90252 440.40444 c
238.90252 440.51187 238.86057 440.60060 238.77893 440.67288 c
238.69729 440.74517 238.49660 440.80356 238.17685 440.85033 C
238.14198 440.90391 238.12328 440.95068 238.12328 440.98554 C
238.14425 441.05329 L
238.32142 441.06009 l
238.36592 441.06009 238.44756 441.05783 238.55953 441.05329 c
238.75540 441.03912 238.95156 441.03231 239.14743 441.03231 c
239.24778 441.03231 239.42041 441.03458 239.66561 441.04167 c
239.91279 441.04847 240.09959 441.05329 240.22545 441.05329 c
240.54038 441.05329 L
240.59877 441.02523 240.62910 440.98781 240.62910 440.94132 c
240.62910 440.91780 240.62457 440.88746 240.61521 440.85033 C
240.54293 440.83162 240.45420 440.81291 240.34904 440.79420 c
240.10413 440.75679 239.86375 440.66580 239.63272 440.52350 c
239.46009 440.41635 239.28746 440.24825 239.11965 440.01496 c
238.13717 438.69883 L
239.13128 437.46236 l
239.58850 436.84866 239.86857 436.48923 239.97118 436.37953 c
240.07380 436.26983 240.18576 436.18139 240.30482 436.11364 c
240.42387 436.04589 240.59650 435.98069 240.82526 435.92230 C
240.82980 435.86617 240.83206 435.81742 240.83206 435.77518 c
240.83206 435.74258 240.82271 435.69836 240.80428 435.64224 C
240.72236 435.64224 240.30709 435.66094 239.55591 435.69836 c
239.51140 435.69836 239.29228 435.69609 238.89798 435.69128 c
238.77411 435.68674 238.65534 435.68419 238.54309 435.68419 c
238.43594 435.68419 238.30753 435.68901 238.15134 435.69836 C
238.17231 435.90841 L
238.23978 435.92230 238.31688 435.93619 238.39852 435.95490 c
238.63181 435.99685 238.79991 436.05524 238.90025 436.13008 c
238.96091 436.17657 238.98898 436.22787 238.98898 436.28400 c
238.98898 436.37953 238.67858 436.80189 238.05553 437.55080 c
237.66123 438.02447 L
237.46989 437.83313 237.25757 437.56016 237.02428 437.20781 c
236.89134 437.00258 236.78164 436.84866 236.70000 436.74831 c
236.54580 436.57342 236.46898 436.42403 236.46898 436.30724 c
236.46898 436.26756 236.49449 436.22561 236.55061 436.18365 c
236.60419 436.14170 236.76293 436.09266 237.02882 436.03654 c
237.20627 436.00167 237.32986 435.97134 237.40214 435.95036 C
237.41631 435.88743 237.42312 435.84066 237.42312 435.80806 c
237.42312 435.77773 237.41858 435.73323 237.40923 435.67030 C
237.05915 435.68901 236.71616 435.69836 236.38479 435.69836 c
235.96498 435.69836 235.66167 435.69354 235.47260 435.68419 c
235.28353 435.67483 235.16702 435.67030 235.12025 435.67030 c
235.06668 435.67030 234.97795 435.67483 234.86117 435.68419 C
234.84274 435.74967 234.83339 435.79871 234.83339 435.83131 c
234.84728 435.92230 L
234.91020 435.95263 234.98957 435.97361 235.08539 435.98069 c
235.39096 436.01102 235.66167 436.12072 235.89950 436.30951 c
236.13534 436.49631 236.66258 437.14261 237.47698 438.24869 C
236.55288 439.35931 L
235.59846 440.50734 l
235.57068 440.53512 235.53780 440.56091 235.49584 440.58898 c
235.42356 440.63093 235.32548 440.66126 235.20189 440.68450 c
235.01537 440.72192 234.88214 440.74743 234.80532 440.76614 C
@c
F

@rax %Note: Object
234.79115 432.87024 244.10098 441.06009 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_solid_fill
243.99723 432.87024 m
243.65537 432.88894 243.19814 432.89830 242.62413 432.89830 c
241.88202 432.88072 L
241.55065 432.89121 L
241.28702 432.88072 l
241.26009 432.88299 241.22041 432.88894 241.16797 432.89830 C
241.20765 432.99156 241.25896 433.07660 241.32076 433.15370 c
241.51096 433.38586 241.78989 433.68463 242.15613 434.05087 c
242.66721 434.56422 243.00312 434.96787 243.16526 435.26069 c
243.32740 435.55465 243.40791 435.82989 243.40791 436.08784 c
243.40791 436.33049 243.32627 436.53345 243.16186 436.69814 c
242.99745 436.86255 242.79562 436.94419 242.55638 436.94419 c
242.41181 436.94419 242.27291 436.91046 242.13883 436.84384 c
242.00334 436.77609 241.89477 436.69219 241.81313 436.58957 c
241.76069 436.52296 241.69068 436.39115 241.60450 436.19414 c
241.55660 436.08444 241.52740 436.02491 241.51918 436.01556 c
241.50529 436.00025 241.48885 435.99231 241.47128 435.99231 c
241.45257 435.99231 241.43528 436.00139 241.41770 436.02123 c
241.40013 436.03994 241.39191 436.06573 241.39191 436.09493 c
241.39191 436.19754 241.44350 436.36082 241.54724 436.58731 c
241.65099 436.81238 241.80378 436.98954 242.00561 437.11682 c
242.20743 437.24409 242.44214 437.30816 242.70917 437.30816 c
243.05811 437.30816 243.34838 437.19506 243.58309 436.96743 c
243.81638 436.74009 243.93288 436.46939 243.93288 436.15304 c
243.93288 435.90472 243.85380 435.65159 243.69392 435.39477 c
243.53405 435.13824 243.16781 434.74507 242.59380 434.21414 c
242.40472 434.04151 242.27065 433.91310 242.19014 433.83146 c
242.11077 433.74869 241.94976 433.57011 241.70825 433.29600 C
242.05691 433.28324 242.37326 433.27616 242.65899 433.27616 c
242.71965 433.27616 242.78740 433.27843 242.86082 433.28324 c
242.99490 433.28778 243.07313 433.29033 243.09638 433.29033 c
243.57146 433.27984 l
243.62391 433.27984 243.67748 433.30535 243.73247 433.35553 c
243.78605 433.40570 243.86060 433.54687 243.95386 433.78016 C
244.03436 433.78384 l
244.04513 433.78384 244.06243 433.78243 244.08454 433.78016 C
244.09502 433.75691 244.10098 433.74047 244.10098 433.72885 c
244.09389 433.70192 l
244.07660 433.63559 244.06129 433.51427 244.04740 433.33909 c
244.03918 433.23647 244.02161 433.08028 243.99723 432.87024 C
@c
F

@rax %Note: Object
290.73742 436.48866 296.71540 445.36450 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_solid_fill
290.77257 445.33417 m
290.87291 445.34353 290.95682 445.35061 291.02457 445.35061 c
291.35112 445.35061 L
291.79672 445.36450 L
292.37783 445.34353 L
292.84923 445.35742 l
293.09868 445.35742 293.32261 445.34353 293.52331 445.31093 C
293.54202 445.26643 293.55137 445.23156 293.55137 445.20350 c
293.54428 445.15219 L
293.44876 445.10797 293.30164 445.07509 293.10123 445.05666 c
292.81890 445.03313 292.61565 444.97956 292.49206 444.90019 C
292.47817 444.82082 l
292.47817 444.77433 292.49688 444.70658 292.53402 444.61559 c
292.55754 444.55946 292.58787 444.47783 292.62274 444.36813 c
292.72535 444.03222 292.94249 443.37883 293.27839 442.41052 c
293.52104 441.71291 293.74753 441.11339 293.95276 440.61165 C
294.07635 440.88690 294.21865 441.23698 294.37739 441.65934 c
294.95594 443.28104 l
295.08917 443.63339 295.18951 443.98545 295.25698 444.34261 c
295.28504 444.48265 295.29893 444.59461 295.29893 444.67625 c
295.29893 444.74400 295.26860 444.80920 295.21049 444.86759 c
295.14983 444.92598 295.03304 444.97729 294.85332 445.01698 c
294.53131 445.09861 294.35414 445.14992 294.32835 445.17090 c
294.30028 445.19187 294.28413 445.23609 294.27931 445.30384 C
294.30737 445.32482 294.33770 445.34353 294.37512 445.35742 C
294.79975 445.35742 L
295.25698 445.35061 L
295.94296 445.35742 L
296.37950 445.35061 L
296.48891 445.35742 l
296.52180 445.35742 296.57310 445.35288 296.64765 445.34353 C
296.69216 445.31802 296.71540 445.27833 296.71540 445.22447 c
296.71540 445.17543 296.69443 445.13121 296.65474 445.09153 C
296.51698 445.07055 l
296.25335 445.03569 296.05039 444.96794 295.90809 444.87213 c
295.83099 444.81855 295.76324 444.70885 295.70967 444.54076 c
295.69096 444.47783 295.66063 444.39846 295.62094 444.30066 c
295.59770 444.24680 295.56510 444.15581 295.52060 444.02769 c
295.47865 443.89928 295.42280 443.74989 295.35506 443.57726 c
295.27342 443.38592 L
295.26633 443.35106 L
294.10441 440.28964 L
293.25742 437.98677 l
293.20384 437.87225 293.14063 437.72995 293.06608 437.55959 c
292.89345 437.23531 292.79083 437.05559 292.76050 437.02526 c
292.62274 436.85490 292.50369 436.73613 292.40334 436.66611 c
292.05581 436.51672 l
291.98580 436.49802 291.91351 436.48866 291.83641 436.48866 c
291.63118 436.48866 291.48180 436.53317 291.38598 436.62416 c
291.29046 436.71260 291.24142 436.83647 291.24142 436.99266 c
291.24142 437.13978 291.31143 437.27272 291.45373 437.39178 C
291.49824 437.40567 291.54472 437.42211 291.58923 437.44535 c
291.68022 437.46633 L
292.08387 437.39405 292.33814 437.35663 292.43849 437.35663 C
292.53402 437.40794 292.60403 437.46633 292.64854 437.53408 c
292.87247 437.86772 293.06381 438.23877 293.22255 438.64923 c
293.38328 439.05997 293.46265 439.33521 293.46265 439.47524 c
293.46265 439.63172 293.40454 439.85792 293.28548 440.15443 c
292.52466 442.16334 l
292.41978 442.42214 292.10485 443.26913 291.58441 444.70431 c
291.55181 444.79049 291.51213 444.85597 291.46082 444.89792 C
290.99650 445.05893 L
290.85420 445.08444 l
290.77710 445.11959 290.73742 445.17090 290.73742 445.23609 C
290.77257 445.33417 L
@c
F

%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel17Dict 17.0 0
%%EOF
